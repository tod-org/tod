# This GitHub Actions workflow updates the Homebrew formula for the tod application. It pulls the script from the homebrew-tod repository and then runs it to update the Formula, then pushes the new updated formula directly.
name: Update Homebrew Formula

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to update to (e.g., v1.2.3 or 1.2.3). If blank, use latest release."
        required: false
        type: string

  workflow_run:
    workflows: ["macOS Build & Release", "Linux Build & Release"]
    types: [completed]

permissions:
  contents: read

concurrency:
  group: homebrew-formula-update
  cancel-in-progress: false

jobs:
  update-homebrew:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Create app token (tod-deploy)
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.TODD_APP_ID }}
          private-key: ${{ secrets.TODD_PRIVATE_KEY }}
          owner: tod-org
          repositories: homebrew-tod

      # Avoid double-runs: only continue automatically when BOTH platform workflows have succeeded for the same head_sha.
      - name: Ensure both macOS & Linux release workflows succeeded (skip on manual)
        if: ${{ github.event_name == 'workflow_run' }}
        env:
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
          HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
        run: |
          set -euo pipefail
          need=("macOS Build & Release" "Linux Build & Release")
          for w in "${need[@]}"; do
            # Find the most recent run for this workflow name & head_sha
            run_json=$(gh api \
              -H "Accept: application/vnd.github+json" \
              "/repos/$REPO/actions/workflows" | jq -r --arg name "$w" '.workflows[] | select(.name==$name) | .id' | head -n1)
            if [[ -z "${run_json:-}" ]]; then
              echo "Could not find workflow id for '$w'"; exit 1
            fi
            run_id=$(gh api \
              -H "Accept: application/vnd.github+json" \
              "/repos/$REPO/actions/workflows/$run_json/runs?per_page=50&head_sha=$HEAD_SHA" \
              | jq -r '.workflow_runs | map(select(.head_sha=="'"$HEAD_SHA"'")) | first | .id // empty')
            if [[ -z "${run_id:-}" ]]; then
              echo "No run of '$w' found for head_sha=$HEAD_SHA yet"; exit 1
            fi
            conclusion=$(gh api \
              -H "Accept: application/vnd.github+json" \
              "/repos/$REPO/actions/runs/$run_id" | jq -r '.conclusion')
            if [[ "$conclusion" != "success" ]]; then
              echo "'$w' is not successful yet (conclusion=$conclusion)"; exit 1
            fi
          done
          echo "Both platform workflows succeeded for $HEAD_SHA."

      - name: Checkout homebrew-tod
        uses: actions/checkout@v4
        with:
          repository: tod-org/homebrew-tod
          ref: main
          fetch-depth: 1
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false

      # Resolve version (manual input or latest release)
      - name: Resolve version
        id: resolve_version
        env:
          GH_TOKEN: ${{ github.token }}
          INPUT_TAG: ${{ github.event.inputs.tag }}
        run: |
          set -euo pipefail
          if [[ -n "${INPUT_TAG:-}" ]]; then
            tag="${INPUT_TAG}"
            version="${tag#v}"
            echo "Using provided tag: $tag"
          else
            tag=$(gh api /repos/tod-org/tod/releases/latest --jq .tag_name)
            if [[ -z "${tag:-}" || "${tag}" == "null" ]]; then
              echo "Failed to fetch latest tag from tod-org/tod"; exit 1
            fi
            version="${tag#v}"
            echo "Latest tag: $tag"
          fi
          echo "version=${version}" >> "$GITHUB_OUTPUT"
          echo "tag=${tag}" >> "$GITHUB_OUTPUT"

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: false

      - name: Run formula updater (from tap repo)
        run: |
          ruby scripts/update_formula.rb "${{ steps.resolve_version.outputs.version }}"
          if [ ! -f scripts/update_formula.rb ]; then
            echo "Error: scripts/update_formula.rb not found!" >&2
            exit 1
          fi
          ruby scripts/update_formula.rb "${{ steps.resolve_version.outputs.version }}"
      - name: Show diff
        run: git --no-pager diff --stat || true

      - name: Commit & push changes (if any)
        env:
          APP_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          set -euo pipefail
          if git diff --quiet; then
            echo "ℹ️ No changes to commit."
            exit 0
          fi
          echo "✅ Changes detected. Committing…"
          git config user.name "tod-deploy[bot]"
          git config user.email "tod-deploy[bot]@users.noreply.github.com"
          git add Formula/tod.rb
          git commit -m "Update formula to version ${{ steps.resolve_version.outputs.version }}"
          git push "https://x-access-token:${APP_TOKEN}@github.com/tod-org/homebrew-tod.git" HEAD:main
          echo "Changes pushed to homebrew-tod repository."
