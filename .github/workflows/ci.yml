name: ci

on:
  push:                  # run on pushes to any branch
  pull_request:          # run on PRs (forks will use this)
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_TEST_DEBUG: 0
  CARGO_PROFILE_RELEASE_LTO: true
  CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1

permissions:
  contents: read

# Prevent duplicate runs per-ref and cancel older runs when new commits arrive
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

# Define a reusable condition
defaults:
  run:
    shell: bash
x-job-condition: &job-condition
  if: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}

jobs:
  test:
    <<: *job-condition
    runs-on: ubuntu-latest
    name: Cargo CI Tests
    steps:
      - uses: actions/checkout@v5
      - uses: taiki-e/install-action@nextest
      - name: Install Rust Toolchain
        run: rustup toolchain install
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
      - name: Cargo Test
        run: cargo nextest run --all-features

  check:
    <<: *job-condition
    runs-on: ubuntu-latest
    name: Cargo Check
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
      - name: Check
        run: cargo check --locked --all-features

  todos:
    <<: *job-condition
    name: TODO and FIXME
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: ./scripts/lint_string.sh "TODO "
      - run: ./scripts/lint_string.sh "TODO:"
      - run: ./scripts/lint_string.sh "FIXME "
      - run: ./scripts/lint_string.sh "FIXME:"
      - run: ./scripts/lint_string.sh "todo "
      - run: ./scripts/lint_string.sh "todo:"
      - run: ./scripts/lint_string.sh "fixme "
      - run: ./scripts/lint_string.sh "fixme:"

  fmt:
    <<: *job-condition
    name: Rust-fmt (Cargo Format)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    <<: *job-condition
    name: Clippy (Cargo Clippy Lint Check)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install Rust Toolchain
        run: rustup toolchain install
      - name: Cache Rust Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
      - name: Install Clippy
        run: rustup component add clippy
      - name: Run Clippy
        run: cargo clippy -- -D warnings
